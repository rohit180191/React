{"version":3,"sources":["components/Order/Order.js","containers/Orders/Orders.js","components/UI/Spinner/Spinner.js","components/UI/Spinner/Spinner.module.css","components/Order/Order.module.css"],"names":["Order","props","Ingredients","ingredient","ingredients","push","name","amount","ingredientArray","map","item","toUpperCase","className","classes","join","price","toFixed","Orders","this","onLoad","token","order","orders","key","id","loading","Spinner","Component","connect","state","auth","dispatch","actionCreators","module","exports"],"mappings":"oMAiBeA,EAfD,SAACC,GACX,IAAIC,EAAc,GAClB,IAAI,IAAIC,KAAcF,EAAMG,YACxBF,EAAYG,KACR,CAACC,KAAMH,EAAYI,OAAQN,EAAMG,YAAYD,KAGrD,IAAMK,EAAkBN,EAAYO,KAAI,SAAAC,GAAI,gBAAOA,EAAKJ,KAAKK,cAAjB,aAAmCD,EAAKH,OAAxC,QAC5C,OACA,yBAAKK,UAAWC,IAAQb,OACpB,0CAAgBQ,EAAgBM,KAAK,MACrC,oCAAS,uCAAab,EAAMc,MAAMC,QAAQ,O,uBCL5CC,E,kLAGCC,KAAKjB,MAAMkB,OAAOD,KAAKjB,MAAMmB,S,+BAGxB,IAAIC,EAAQH,KAAKjB,MAAMqB,OAAOA,OAAOb,KAAI,SAACY,GAAD,OACrC,kBAAC,EAAD,CAAOE,IAAKF,EAAMG,GAAIpB,YAAaiB,EAAMjB,YAAaW,OAAQM,EAAMN,WAK5E,OAHOG,KAAKjB,MAAMqB,OAAOG,UACjBJ,EAAQ,kBAACK,EAAA,EAAD,OAGZ,6BACIL,O,GAdKM,aAoCNC,uBAfS,SAAAC,GACpB,MAAO,CACHP,OAAQO,EAAMP,OACdF,MAAOS,EAAMC,KAAKV,UAIC,SAAAW,GACvB,MAAO,CACHZ,OAAQ,SAACC,GAAD,OAAWW,EAASC,IAA0BZ,QAM/CQ,CAA6CX,I,gCC5C5D,qCAOeS,IAJC,kBACZ,yBAAKd,UAAWC,IAAQa,SAAxB,gB,mBCHJO,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,mBCA7DD,EAAOC,QAAU,CAAC,MAAQ","file":"static/js/7.b8c9b538.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Order.module.css';\r\nconst Order = (props) =>{ \r\n    let Ingredients = [];\r\n    for(let ingredient in props.ingredients){\r\n        Ingredients.push(\r\n            {name: ingredient, amount: props.ingredients[ingredient]}\r\n        );\r\n    }\r\n    const ingredientArray = Ingredients.map(item => `${item.name.toUpperCase()} (${item.amount})`);\r\n    return (\r\n    <div className={classes.Order}>\r\n        <p>Ingredients {ingredientArray.join(' ')}</p>\r\n        <p>Price <strong>USD {props.price.toFixed(2)}</strong></p>\r\n    </div>\r\n)\r\n}\r\nexport default Order;","import React, { Component } from 'react';\r\nimport Order from './../../components/Order/Order';\r\n// import axios from './../../axios-orders';\r\nimport {connect} from 'react-redux'\r\nimport Spinner from './../../components/UI/Spinner/Spinner';\r\nimport * as actionCreators from './../../store/actions';\r\n\r\n\r\nclass Orders extends Component{\r\n\r\n    componentDidMount() {\r\n       this.props.onLoad(this.props.token);\r\n    }\r\n    render() {\r\n            let order = this.props.orders.orders.map((order)=> (\r\n                <Order key={order.id} ingredients={order.ingredients} price={+order.price}/>\r\n            ));\r\n            if(this.props.orders.loading) {\r\n                order = <Spinner/>;\r\n            }\r\n        return (\r\n            <div>\r\n               {order}\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.orders,\r\n        token: state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLoad: (token) => dispatch(actionCreators.loadOrders(token))\r\n    }\r\n    \r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst Spinner = () => (\r\n    <div className={classes.Spinner}>Loading...</div>\r\n);\r\n\r\nexport default Spinner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__EEHbp\",\"load3\":\"Spinner_load3__pkDYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1Wcu8\"};"],"sourceRoot":""}