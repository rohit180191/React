{"version":3,"sources":["hoc/Auxillary.js","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Backdrop/Backdrop.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/UI/Modal/Modal.js","store/actions.js","components/Layout/Layout.module.css","assets/images/logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/UI/Modal/Modal.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","hoc/WithErrorHandler.js","App.js","serviceWorker.js","store/reducers/burger-builder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["Auxillary","props","children","instance","axios","create","baseURL","module","exports","Backdrop","show","className","classes","onClick","clicked","Modal","nextProps","nextState","this","modalClose","style","transform","opacity","Component","ADD_INGREDIENT","REMOVE_INGREDIENT","INGREDIENTS_LOADED","ORDER_LOADED","ORDER_LOAD_FAILED","ORDER_LOADING","AUTH_START","AUTH_SUCCESS","AUTH_FAILED","LOGOUT","SET_AUTH_REDIRECT_PATH","addIngredient","ingredientType","type","removeIngredient","loadIngredients","dispatch","get","then","response","ingredients","data","catch","error","console","log","loadOrders","token","fetchedOrders","key","push","id","orders","logout","localStorage","removeItem","checkTokenExpiry","expiryTime","setTimeout","authSuccess","authData","setItem","JSON","stringify","expiryDate","Date","getTime","expiresIn","auth","email","password","isSignUp","returnSecureToken","url","authAxios","post","authFailed","setAuthRedirectPath","path","authCheckState","parse","getItem","Logo","src","BurgerLogo","alt","NavigationItem","to","link","activeClassName","active","NavigationItems","isAuth","DrawerToggle","toggleSideDrawer","Toolbar","sideDrawerToggleHandler","DeskTopOnly","SideDrawer","customClass","showBackDrop","Open","Close","close","join","Layout","state","showSideDrawer","sideDrawerCloseHandler","setState","toggleSideDrawerHandler","prevState","isAuthenticated","content","connect","WithErrorHandler","WrappedComponent","errorModalCloseHandler","responseInterceptor","interceptors","use","resp","requestInterceptor","request","req","eject","message","BurgerBuilder","React","lazy","Checkout","Orders","Auth","Logout","App","tryAutoSignIn","routes","render","fallback","exact","from","actionCreators","Boolean","window","location","hostname","match","initialState","totalPrice","ingredientPrice","salad","meat","cheese","bacon","isBuilding","reducer","action","actionTypes","oldCount","updatedCount","updatedIngredientState","additionalPrice","oldPrice","newPrice","countBefore","updatedCountAfter","updatedIngredientStateAfter","additionalPriceAfter","priceBefore","priceAfter","loading","userId","refreshToken","authRedirectPath","idToken","localId","rootReducer","combineReducers","burgerBuilder","burgerBuilderReducer","orderReducer","authReducer","composeEnhancers","compose","store","createStore","applyMiddleware","next","result","getState","thunk","app","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d86b1cbe.chunk.js","sourcesContent":["const Auxillary = (props) => props.children;\r\n\r\nexport default Auxillary;","import axios from 'axios';\r\n\r\nconst instance  = axios.create({\r\nbaseURL: 'https://react-my-burger-rohit.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__2x3tZ\",\"Logo\":\"SideDrawer_Logo__myTQp\",\"Open\":\"SideDrawer_Open__1OnNg\",\"Close\":\"SideDrawer_Close__1RwH4\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css'\r\nconst Backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={() => props.clicked()}></div> : null\r\n);\r\n\r\nexport default Backdrop;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__2vTWg\",\"Logo\":\"Toolbar_Logo__2oyjj\",\"DeskTopOnly\":\"Toolbar_DeskTopOnly__1iwkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1Q7w5\",\"active\":\"NavigationItem_active__UJJd7\"};","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Backdrop from './../Backdrop/Backdrop'\r\nimport Aux from \"./../../../hoc/Auxillary\";\r\n\r\nclass Modal extends Component{\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return (nextProps.show !== this.props.show || nextProps.children !== this.props.children);\r\n    }\r\n    render() {\r\n        return (  \r\n            <Aux>\r\n            <Backdrop show={this.props.show} clicked={this.props.modalClose}/>    \r\n            <div \r\n            style ={{\r\n                transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                opacity: this.props.show ? '1' : '0'\r\n            }}\r\n            className={classes.Modal}>\r\n                {this.props.children}\r\n            </div>\r\n            </Aux>    \r\n\r\n);\r\n    }\r\n}\r\n\r\n\r\nexport default Modal;","import axios from './../axios-orders';\r\nimport authAxios from 'axios';\r\nexport const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const INGREDIENTS_LOADED = 'INGREDIENTS_LOADED';\r\nexport const ORDER_LOADED = 'ORDER_LOADED';\r\nexport const ORDER_LOAD_FAILED = 'ORDER_LOAD_FAILED';\r\nexport const ORDER_LOADING = 'ORDER_LOADING';\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILED = 'AUTH_FAILED';\r\nexport const LOGOUT = 'LOGOUT'; \r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\nexport const addIngredient = (ingredientType) => {\r\n    return {type:ADD_INGREDIENT, ingredientType }\r\n}\r\n\r\nexport const removeIngredient = (ingredientType) => {\r\n    return {type:REMOVE_INGREDIENT, ingredientType }\r\n}\r\n\r\nexport const ingredientsLoaded = (ingredients) => {\r\n    return {type:INGREDIENTS_LOADED, ingredients }\r\n}\r\n\r\nexport const loadIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n        .then(response => {\r\n            dispatch(ingredientsLoaded(response.data));\r\n        })\r\n        .catch(error => console.log(error));\r\n    }\r\n}\r\n\r\nexport const orderLoaded = (orders) => {\r\n    return {type:ORDER_LOADED, orders }\r\n}\r\n\r\nexport const orderFaliedToLoad = () => {\r\nreturn {type:ORDER_LOAD_FAILED}\r\n}\r\n\r\nexport const orderLoading = () => {\r\n    return {type:ORDER_LOADING}\r\n    }\r\n\r\nexport const loadOrders = (token) => {\r\n    return dispatch => {\r\n        dispatch(orderLoading())\r\n        axios.get(`/orders.json?auth=${token}`).then(\r\n            (response) => {\r\n                const fetchedOrders = [];\r\n                for(let key in response.data){\r\n                    fetchedOrders.push({\r\n                        ...response.data[key],\r\n                        id: key\r\n                    })\r\n                }\r\n                dispatch(orderLoaded(fetchedOrders))\r\n            }\r\n        )\r\n        .catch((error) => (dispatch(orderFaliedToLoad())));\r\n    }\r\n}\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: AUTH_START\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('authData');\r\n    localStorage.removeItem('expiryDate');\r\n    return {\r\n        type : LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkTokenExpiry = (expiryTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expiryTime*1000);\r\n    }\r\n}\r\n\r\nexport const authSuccess = (authData) => {\r\n    localStorage.setItem('authData', JSON.stringify(authData));\r\n    const expiryDate = new Date(new Date().getTime() + authData.expiresIn * 1000);\r\n    localStorage.setItem('expiryDate', expiryDate);\r\n    return {type: AUTH_SUCCESS, authData}\r\n}\r\n\r\nexport const authFailed = (error) => {\r\n    return {type: AUTH_FAILED, error}\r\n}\r\n\r\nexport const auth = (email, password, isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n        const url = isSignUp ? 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyDmW9J98Z7AaQAv6ykvYS0nm4vZhNMqAuw' : 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyDmW9J98Z7AaQAv6ykvYS0nm4vZhNMqAuw';\r\n        authAxios.post(url, authData)\r\n        .then(response =>{ dispatch(authSuccess(response.data)); dispatch(checkTokenExpiry(response.data.expiresIn))})\r\n        .catch(error => {dispatch(authFailed(error.response.data.error))})\r\n        \r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {type: SET_AUTH_REDIRECT_PATH, path};\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const authData = JSON.parse(localStorage.getItem('authData'));\r\n        if(authData !== null) {\r\n            const expiryDate = new Date(localStorage.getItem('expiryDate'));\r\n            if(expiryDate > new Date()) {\r\n                dispatch(authSuccess(authData));\r\n                dispatch(checkTokenExpiry((expiryDate.getTime() - new Date().getTime())/1000));\r\n            } else{\r\n                dispatch(logout());\r\n            }\r\n        }else {\r\n            dispatch(logout());\r\n        }\r\n    };\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Layout_content__2IqAV\"};","module.exports = __webpack_public_path__ + \"static/media/logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1kgjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2CQ95\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__2zC_q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__138dJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1KCRU\"};","import React from 'react';\r\nimport BurgerLogo from '../../assets/images/logo.png'\r\nimport classes from './Logo.module.css';\r\n\r\nconst Logo = (props) => (\r\n<div className={classes.Logo}>\r\n    <img src={BurgerLogo} alt='logo'/>\r\n</div>\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport classes from './NavigationItem.module.css';\r\n\r\nconst NavigationItem = (props) => (\r\n <li className={classes.NavigationItem}>\r\n     <NavLink to={props.link} activeClassName={classes.active}>\r\n         {props.children}\r\n         </NavLink>\r\n</li>\r\n);\r\n\r\nexport default NavigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst NavigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link='/burger-builder'>Burger Builder</NavigationItem>\r\n        {\r\n            (props.isAuth) ?\r\n            <NavigationItem link='/orders'>Orders</NavigationItem>:\r\n            null\r\n        }\r\n        {\r\n        (!props.isAuth) ?\r\n         <NavigationItem link='/auth'>Authenticate</NavigationItem>:\r\n         <NavigationItem link='/logout'>Logout</NavigationItem>\r\n        }\r\n    </ul>\r\n);\r\n\r\nexport default NavigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst DrawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick = {() => props.toggleSideDrawer()}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css'\r\nimport Logo from './../../Logo/Logo'\r\nimport NavigationItems from './../NavigationItems/NavigationItems';\r\nimport DrawerToggle from './../SideDrawer/DrawerToggle/DrawerToggle'\r\n\r\nconst Toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle toggleSideDrawer={props.sideDrawerToggleHandler}/>\r\n        <div className={classes.Logo}><Logo/></div>\r\n        <nav className={classes.DeskTopOnly}>\r\n           <NavigationItems isAuth={props.isAuth}/>\r\n        </nav>\r\n    </header>\r\n)\r\n\r\nexport default Toolbar;","import React from 'react';\r\nimport Logo from './../../Logo/Logo';\r\nimport NavigationItems from './../NavigationItems/NavigationItems'\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from './../../UI/Backdrop/Backdrop'\r\nimport Aux from './../../../hoc/Auxillary'\r\n\r\nconst SideDrawer = (props) => {\r\n    const customClass = (props.showBackDrop) ? classes.Open : classes.Close;\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.showBackDrop} clicked={props.close} />\r\n            <div className={[classes.SideDrawer, customClass].join(' ')} onClick={props.close}>\r\n                <div className={classes.Logo}><Logo/></div>\r\n                <nav>\r\n                    <NavigationItems isAuth={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n        \r\n    );\r\n}\r\n\r\nexport default SideDrawer;","import React, { Component } from 'react';\r\nimport Aux from '../../hoc/Auxillary';\r\nimport classes from './Layout.module.css'\r\nimport Toolbar from './../Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from './../Navigation/SideDrawer/SideDrawer';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Layout extends Component{\r\n\r\n    state = {\r\n        showSideDrawer: false\r\n    };\r\n    sideDrawerCloseHandler = () =>{\r\n        this.setState({showSideDrawer: false})\r\n    }\r\n\r\n    toggleSideDrawerHandler = () => {\r\n        this.setState((prevState)=>{\r\n            return {showSideDrawer: !prevState.showSideDrawer}\r\n        });\r\n    }\r\n   \r\n    render() {\r\n        return  (\r\n            <Aux>\r\n                <Toolbar\r\n                isAuth={this.props.isAuthenticated} \r\n                sideDrawerToggleHandler={this.toggleSideDrawerHandler}/>\r\n                <SideDrawer\r\n                isAuth={this.props.isAuthenticated}\r\n                showBackDrop = {this.state.showSideDrawer} close={this.sideDrawerCloseHandler}/>\r\n                <main className={classes.content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Aux>\r\n        );\r\n    }\r\n} \r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: (state.auth.token !== null) ? true : false \r\n    };\r\n}\r\nexport default connect(mapStateToProps, null)(Layout);\r\n\r\n","import React, { Component } from 'react';\r\nimport Aux from './Auxillary';\r\nimport Modal from './../components/UI/Modal/Modal';\r\n\r\nconst WithErrorHandler = (WrappedComponent, axios) => {\r\n\r\n    return class extends Component{\r\n        state = {\r\n            error: null\r\n        }\r\n        componentDidMount() {\r\n            console.log('WithErrorHandler Mounted');\r\n            this.responseInterceptor = axios.interceptors.response.use(resp => resp, error => {\r\n                this.setState({error: error})\r\n            });\r\n\r\n           this.requestInterceptor = axios.interceptors.request.use(req => {\r\n                return req;\r\n            }, error => {\r\n                this.setState({error: error})\r\n            });\r\n\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n        }\r\n\r\n        errorModalCloseHandler = () => {\r\n            this.setState({error:null});\r\n        }\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal show={this.state.error} modalClose={this.errorModalCloseHandler}>\r\n                      {this.state.error? this.state.error.message: null}\r\n                    </Modal>\r\n                     <WrappedComponent {...this.props}/>\r\n                </Aux>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default WithErrorHandler;","import React, { Component, Suspense } from 'react';\nimport {Route, Redirect, Switch} from 'react-router-dom';\nimport Layout from './components/Layout/Layout';\nimport WithErrorHandler from './hoc/WithErrorHandler';\nimport axios from './axios-orders';\nimport {connect} from 'react-redux';\nimport * as actionCreators from './store/actions';\nconst BurgerBuilder = React.lazy(() => import('./containers/BurgerBuilder/BurgerBuilder'));\nconst Checkout = React.lazy(() => import('./containers/Checkout/Checkout'));\nconst Orders = React.lazy(() => import('./containers/Orders/Orders'));\nconst Auth = React.lazy(() => import('./containers/Auth/Auth'));\nconst Logout = React.lazy(() => import('./containers/Auth/Logout/Logout'));\nclass App extends Component {\n  componentDidMount() {\n    console.log('App Mounted');\n    this.props.tryAutoSignIn();\n  }\n render() {\n   let routes = (\n     <Switch>\n       <Route path='/burger-builder' render={\n              (props) => (\n                <Suspense fallback={<div>Loading...</div>}>\n                  <BurgerBuilder {...props}/>\n                </Suspense>\n              )\n            }/>\n      <Route path = '/auth' render = {\n              (props) => (\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Auth {...props}/>\n                </Suspense>\n              )\n            }/>  \n      <Redirect exact from='/' to='/burger-builder'/>  \n      <Redirect to='/'/>                 \n     </Switch>\n   );\n   if(this.props.isAuthenticated) {\n    routes = (\n      <Switch>\n        <Route path='/burger-builder' render={\n               (props) => (\n                 <Suspense fallback={<div>Loading...</div>}>\n                   <BurgerBuilder {...props}/>\n                 </Suspense>\n               )\n             }/>\n          <Route path= '/checkout' render={\n              (props) => (\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Checkout {...props}/>\n                </Suspense>\n              )\n            }/>\n            <Route path= '/orders' render={\n              (props) => (\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Orders {...props}/>\n                </Suspense>\n              )\n            }/>\n            \n            <Route path='/logout' render={\n              (props) => (\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Logout {...props}/>\n                </Suspense>\n              )\n            }/>    \n             <Route path = '/auth' render = {\n              (props) => (\n                <Suspense fallback={<div>Loading...</div>}>\n                  <Auth {...props}/>\n                </Suspense>\n              )\n            }/>   \n       <Redirect exact from='/' to='/burger-builder'/>\n       <Redirect to='/'/>                 \n      </Switch>\n    )\n   }\n  return (\n    <div>\n      <Layout>\n        {routes}\n      </Layout>\n    </div>\n  );\n } \n}\nconst mapDispatchToProps = dispatch =>{\n  return {\n    tryAutoSignIn: () => dispatch(actionCreators.authCheckState())\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(App, axios));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from './../actions';\r\n\r\nconst INGREDIENT_PRICE = {\r\n    salad:1.5,\r\n    meat:2.3,\r\n    cheese:2.1,\r\n    bacon:0.9\r\n}\r\n\r\nconst initialState = {\r\n    ingredients : null,\r\n    totalPrice: 0,\r\n    ingredientPrice: INGREDIENT_PRICE,\r\n    isBuilding: false\r\n}\r\n\r\n\r\nconst reducer = (state =initialState, action) =>{\r\n    switch(action.type){\r\n\r\n        case actionTypes.ADD_INGREDIENT: \r\n\r\n            const oldCount = state.ingredients[action.ingredientType];\r\n            const updatedCount = oldCount + 1;\r\n            const updatedIngredientState = {...state.ingredients};\r\n            updatedIngredientState[action.ingredientType] = updatedCount;\r\n            const additionalPrice = state.ingredientPrice[action.ingredientType];\r\n            const oldPrice = state.totalPrice;\r\n            const newPrice = oldPrice + additionalPrice;\r\n            return {\r\n                ...state,\r\n                ingredients: updatedIngredientState,\r\n                totalPrice: newPrice,\r\n                isBuilding: true\r\n            };\r\n\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n\r\n            const countBefore = state.ingredients[action.ingredientType];\r\n            const updatedCountAfter = countBefore - 1;\r\n            const updatedIngredientStateAfter = {...state.ingredients};\r\n            updatedIngredientStateAfter[action.ingredientType] = (updatedCountAfter >=0 ) ? updatedCountAfter : 0;\r\n            const additionalPriceAfter = state.ingredientPrice[action.ingredientType];\r\n            const priceBefore = state.totalPrice;\r\n            const priceAfter = priceBefore - additionalPriceAfter;\r\n            return {\r\n               ...state,\r\n                ingredients: updatedIngredientStateAfter,\r\n                totalPrice: priceAfter,\r\n                isBuilding: true\r\n            };\r\n\r\n        case actionTypes.INGREDIENTS_LOADED:\r\n            return {\r\n                ...state,\r\n                ingredients: action.ingredients,\r\n                totalPrice: 5\r\n            }    \r\n        default :\r\n        return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;","import * as actionTypes from './../actions';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: true\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ORDER_LOADED:\r\n            return {\r\n                ...state,\r\n                orders: [...action.orders],\r\n                loading: false\r\n            };\r\n        case actionTypes.ORDER_LOAD_FAILED:\r\n                return {\r\n                    ...state,\r\n                    loading: false\r\n                } \r\n        case actionTypes.ORDER_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }          \r\n        default:\r\n        return {...state};\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer;","import * as actionTypes from './../actions';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    refreshToken: null,\r\n    authRedirectPath:'/'\r\n}\r\n\r\nconst reducer = (state= initialState, action) => {\r\n    switch(action.type){\r\n        case actionTypes.AUTH_START:\r\n            return {...state, loading: true, error: null};\r\n        case actionTypes.AUTH_FAILED:\r\n            return {...state, loading: false, error: action.error};\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {...state, loading: false, error: null, token: action.authData.idToken, userId: action.authData.localId, refreshToken: action.authData.refreshToken} ;   \r\n        case actionTypes.LOGOUT: \r\n            return {...state, token: null, userId: null, refreshToken: null, loading: false, error: null};     \r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: \r\n            return {...state, authRedirectPath: action.path}        \r\n        default:\r\n            return {...state};    \r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, combineReducers, applyMiddleware, compose} from 'redux';\nimport burgerBuilderReducer from './store/reducers/burger-builder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer,\n  orders: orderReducer,\n  auth: authReducer\n});\n\nconst logger = store => {\n  return next => {\n    return action => {\n      console.log('[Middleware] action dispatching');\n      const result = next(action);\n      console.log('[Middleware] next state', store.getState());\n      return result;\n    }\n  }\n}\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__: null || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(\n  <React.StrictMode>\n    {app}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}